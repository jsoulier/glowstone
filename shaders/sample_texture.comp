#include "config.h"
#include "shader.hlsl"

cbuffer UniformBuffer : register(b0, space2)
{
    int Sample;
};

Texture2D<float4> inTexture : register(t0, space0);
[[vk::image_format("rgba8")]]
RWTexture2D<float4> outTexture : register(u0, space1);

[numthreads(SAMPLE_TEXTURE_THREADS_X, SAMPLE_TEXTURE_THREADS_Y, 1)]
void main(uint3 id : SV_DispatchThreadID)
{
    uint width;
    uint height;
    outTexture.GetDimensions(width, height);
    if (id.x >= width || id.y >= height)
    {
        return;
    }
    outTexture[id.xy] = float4(inTexture[id.xy].rgb / Sample, 1.0f);
}