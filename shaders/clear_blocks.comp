#include "config.h"
#include "shader.hlsl"

cbuffer Chunk : register(b0, space2)
{
    int2 Position;
};

Texture2D<uint2> chunks : register(t0, space0);
[[vk::image_format("r8ui")]]
RWTexture3D<uint> blocks : register(u0, space1);

[numthreads(CLEAR_BLOCKS_THREADS_X, CLEAR_BLOCKS_THREADS_Y, CLEAR_BLOCKS_THREADS_X)]
void main(uint3 id : SV_DispatchThreadID)
{
    int3 position = id;
    if (position.x >= CHUNK_WIDTH || position.y >= CHUNK_HEIGHT || position.z >= CHUNK_WIDTH)
    {
        return;
    }
    position.x += chunks[Position].x * CHUNK_WIDTH;
    position.z += chunks[Position].y * CHUNK_WIDTH;
    blocks[position] = kAir;
}